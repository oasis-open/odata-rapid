// copyright: Copyright (c) 2021 Lowell D. Thomas, all rights reserved<br>
//   license: BSD-2-Clause (https://opensource.org/licenses/BSD-2-Clause)<br>
//
// Generated by apg-js, Version 4.0.0 [apg-js](https://github.com/ldthomas/apg-js)
module.exports = function grammar(){
  // ```
  // SUMMARY
  //      rules = 46
  //       udts = 0
  //    opcodes = 411
  //        ---   ABNF original opcodes
  //        ALT = 22
  //        CAT = 68
  //        REP = 44
  //        RNM = 180
  //        TLS = 54
  //        TBS = 33
  //        TRG = 10
  //        ---   SABNF superset opcodes
  //        UDT = 0
  //        AND = 0
  //        NOT = 0
  //        BKA = 0
  //        BKN = 0
  //        BKR = 0
  //        ABG = 0
  //        AEN = 0
  // characters = [0 - 1114111]
  // ```
  /* OBJECT IDENTIFIER (for internal parser use) */
  this.grammarObject = 'grammarObject';

  /* RULES */
  this.rules = [];
  this.rules[0] = {name: 'model', lower: 'model', index: 0, isBkr: false};
  this.rules[1] = {name: 'namespace', lower: 'namespace', index: 1, isBkr: false};
  this.rules[2] = {name: 'include', lower: 'include', index: 2, isBkr: false};
  this.rules[3] = {name: 'modelElement', lower: 'modelelement', index: 3, isBkr: false};
  this.rules[4] = {name: 'structuredType', lower: 'structuredtype', index: 4, isBkr: false};
  this.rules[5] = {name: 'structuredTypeMember', lower: 'structuredtypemember', index: 5, isBkr: false};
  this.rules[6] = {name: 'property', lower: 'property', index: 6, isBkr: false};
  this.rules[7] = {name: 'propertyModifier', lower: 'propertymodifier', index: 7, isBkr: false};
  this.rules[8] = {name: 'typeReference', lower: 'typereference', index: 8, isBkr: false};
  this.rules[9] = {name: 'typeName', lower: 'typename', index: 9, isBkr: false};
  this.rules[10] = {name: 'builtInType', lower: 'builtintype', index: 10, isBkr: false};
  this.rules[11] = {name: 'edmType', lower: 'edmtype', index: 11, isBkr: false};
  this.rules[12] = {name: 'operation', lower: 'operation', index: 12, isBkr: false};
  this.rules[13] = {name: 'operationKind', lower: 'operationkind', index: 13, isBkr: false};
  this.rules[14] = {name: 'parameter', lower: 'parameter', index: 14, isBkr: false};
  this.rules[15] = {name: 'enumType', lower: 'enumtype', index: 15, isBkr: false};
  this.rules[16] = {name: 'enumMember', lower: 'enummember', index: 16, isBkr: false};
  this.rules[17] = {name: 'typeDefinition', lower: 'typedefinition', index: 17, isBkr: false};
  this.rules[18] = {name: 'service', lower: 'service', index: 18, isBkr: false};
  this.rules[19] = {name: 'serviceMember', lower: 'servicemember', index: 19, isBkr: false};
  this.rules[20] = {name: 'entitySet', lower: 'entityset', index: 20, isBkr: false};
  this.rules[21] = {name: 'singleton', lower: 'singleton', index: 21, isBkr: false};
  this.rules[22] = {name: 'serviceOperation', lower: 'serviceoperation', index: 22, isBkr: false};
  this.rules[23] = {name: 'annotations', lower: 'annotations', index: 23, isBkr: false};
  this.rules[24] = {name: 'annotation', lower: 'annotation', index: 24, isBkr: false};
  this.rules[25] = {name: 'annotationValue', lower: 'annotationvalue', index: 25, isBkr: false};
  this.rules[26] = {name: 'annotationProperty', lower: 'annotationproperty', index: 26, isBkr: false};
  this.rules[27] = {name: 'propertyName', lower: 'propertyname', index: 27, isBkr: false};
  this.rules[28] = {name: 'qualifiedName', lower: 'qualifiedname', index: 28, isBkr: false};
  this.rules[29] = {name: 'identifier', lower: 'identifier', index: 29, isBkr: false};
  this.rules[30] = {name: 'identInitial', lower: 'identinitial', index: 30, isBkr: false};
  this.rules[31] = {name: 'identSubsequent', lower: 'identsubsequent', index: 31, isBkr: false};
  this.rules[32] = {name: 'number', lower: 'number', index: 32, isBkr: false};
  this.rules[33] = {name: 'integer', lower: 'integer', index: 33, isBkr: false};
  this.rules[34] = {name: 'precision', lower: 'precision', index: 34, isBkr: false};
  this.rules[35] = {name: 'scale', lower: 'scale', index: 35, isBkr: false};
  this.rules[36] = {name: 'maxLength', lower: 'maxlength', index: 36, isBkr: false};
  this.rules[37] = {name: 'DOC-COMMENT', lower: 'doc-comment', index: 37, isBkr: false};
  this.rules[38] = {name: 'ALPHA', lower: 'alpha', index: 38, isBkr: false};
  this.rules[39] = {name: 'DIGIT', lower: 'digit', index: 39, isBkr: false};
  this.rules[40] = {name: 'CHAR', lower: 'char', index: 40, isBkr: false};
  this.rules[41] = {name: 'DQUOTE', lower: 'dquote', index: 41, isBkr: false};
  this.rules[42] = {name: 'ESCAPE', lower: 'escape', index: 42, isBkr: false};
  this.rules[43] = {name: 'OWS', lower: 'ows', index: 43, isBkr: false};
  this.rules[44] = {name: 'RWS', lower: 'rws', index: 44, isBkr: false};
  this.rules[45] = {name: 'WS', lower: 'ws', index: 45, isBkr: false};

  /* UDTS */
  this.udts = [];

  /* OPCODES */
  /* model */
  this.rules[0].opcodes = [];
  this.rules[0].opcodes[0] = {type: 2, children: [1,2,6,8,15]};// CAT
  this.rules[0].opcodes[1] = {type: 4, index: 43};// RNM(OWS)
  this.rules[0].opcodes[2] = {type: 3, min: 0, max: 1};// REP
  this.rules[0].opcodes[3] = {type: 2, children: [4,5]};// CAT
  this.rules[0].opcodes[4] = {type: 4, index: 1};// RNM(namespace)
  this.rules[0].opcodes[5] = {type: 4, index: 44};// RNM(RWS)
  this.rules[0].opcodes[6] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[0].opcodes[7] = {type: 4, index: 2};// RNM(include)
  this.rules[0].opcodes[8] = {type: 3, min: 0, max: 1};// REP
  this.rules[0].opcodes[9] = {type: 2, children: [10,11]};// CAT
  this.rules[0].opcodes[10] = {type: 4, index: 3};// RNM(modelElement)
  this.rules[0].opcodes[11] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[0].opcodes[12] = {type: 2, children: [13,14]};// CAT
  this.rules[0].opcodes[13] = {type: 4, index: 44};// RNM(RWS)
  this.rules[0].opcodes[14] = {type: 4, index: 3};// RNM(modelElement)
  this.rules[0].opcodes[15] = {type: 4, index: 43};// RNM(OWS)

  /* namespace */
  this.rules[1].opcodes = [];
  this.rules[1].opcodes[0] = {type: 2, children: [1,2,3]};// CAT
  this.rules[1].opcodes[1] = {type: 6, string: [110,97,109,101,115,112,97,99,101]};// TBS
  this.rules[1].opcodes[2] = {type: 4, index: 44};// RNM(RWS)
  this.rules[1].opcodes[3] = {type: 4, index: 28};// RNM(qualifiedName)

  /* include */
  this.rules[2].opcodes = [];
  this.rules[2].opcodes[0] = {type: 2, children: [1,2,3,4,6,7,8,9,10,11]};// CAT
  this.rules[2].opcodes[1] = {type: 6, string: [105,110,99,108,117,100,101]};// TBS
  this.rules[2].opcodes[2] = {type: 4, index: 44};// RNM(RWS)
  this.rules[2].opcodes[3] = {type: 4, index: 41};// RNM(DQUOTE)
  this.rules[2].opcodes[4] = {type: 3, min: 1, max: Infinity};// REP
  this.rules[2].opcodes[5] = {type: 4, index: 40};// RNM(CHAR)
  this.rules[2].opcodes[6] = {type: 4, index: 41};// RNM(DQUOTE)
  this.rules[2].opcodes[7] = {type: 4, index: 44};// RNM(RWS)
  this.rules[2].opcodes[8] = {type: 6, string: [97,115]};// TBS
  this.rules[2].opcodes[9] = {type: 4, index: 44};// RNM(RWS)
  this.rules[2].opcodes[10] = {type: 4, index: 29};// RNM(identifier)
  this.rules[2].opcodes[11] = {type: 4, index: 44};// RNM(RWS)

  /* modelElement */
  this.rules[3].opcodes = [];
  this.rules[3].opcodes[0] = {type: 1, children: [1,2,3,4]};// ALT
  this.rules[3].opcodes[1] = {type: 4, index: 4};// RNM(structuredType)
  this.rules[3].opcodes[2] = {type: 4, index: 15};// RNM(enumType)
  this.rules[3].opcodes[3] = {type: 4, index: 17};// RNM(typeDefinition)
  this.rules[3].opcodes[4] = {type: 4, index: 18};// RNM(service)

  /* structuredType */
  this.rules[4].opcodes = [];
  this.rules[4].opcodes[0] = {type: 2, children: [1,2,6,7,8,9,14,15,16,20,21]};// CAT
  this.rules[4].opcodes[1] = {type: 4, index: 23};// RNM(annotations)
  this.rules[4].opcodes[2] = {type: 3, min: 0, max: 1};// REP
  this.rules[4].opcodes[3] = {type: 2, children: [4,5]};// CAT
  this.rules[4].opcodes[4] = {type: 6, string: [97,98,115,116,114,97,99,116]};// TBS
  this.rules[4].opcodes[5] = {type: 4, index: 44};// RNM(RWS)
  this.rules[4].opcodes[6] = {type: 6, string: [116,121,112,101]};// TBS
  this.rules[4].opcodes[7] = {type: 4, index: 44};// RNM(RWS)
  this.rules[4].opcodes[8] = {type: 4, index: 29};// RNM(identifier)
  this.rules[4].opcodes[9] = {type: 3, min: 0, max: 1};// REP
  this.rules[4].opcodes[10] = {type: 2, children: [11,12,13]};// CAT
  this.rules[4].opcodes[11] = {type: 6, string: [101,120,116,101,110,100,115]};// TBS
  this.rules[4].opcodes[12] = {type: 4, index: 44};// RNM(RWS)
  this.rules[4].opcodes[13] = {type: 4, index: 28};// RNM(qualifiedName)
  this.rules[4].opcodes[14] = {type: 4, index: 43};// RNM(OWS)
  this.rules[4].opcodes[15] = {type: 7, string: [123]};// TLS
  this.rules[4].opcodes[16] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[4].opcodes[17] = {type: 2, children: [18,19]};// CAT
  this.rules[4].opcodes[18] = {type: 4, index: 43};// RNM(OWS)
  this.rules[4].opcodes[19] = {type: 4, index: 5};// RNM(structuredTypeMember)
  this.rules[4].opcodes[20] = {type: 4, index: 43};// RNM(OWS)
  this.rules[4].opcodes[21] = {type: 7, string: [125]};// TLS

  /* structuredTypeMember */
  this.rules[5].opcodes = [];
  this.rules[5].opcodes[0] = {type: 1, children: [1,2]};// ALT
  this.rules[5].opcodes[1] = {type: 4, index: 6};// RNM(property)
  this.rules[5].opcodes[2] = {type: 4, index: 12};// RNM(operation)

  /* property */
  this.rules[6].opcodes = [];
  this.rules[6].opcodes[0] = {type: 2, children: [1,2,6,7,8,9,10]};// CAT
  this.rules[6].opcodes[1] = {type: 4, index: 23};// RNM(annotations)
  this.rules[6].opcodes[2] = {type: 3, min: 0, max: 1};// REP
  this.rules[6].opcodes[3] = {type: 2, children: [4,5]};// CAT
  this.rules[6].opcodes[4] = {type: 4, index: 7};// RNM(propertyModifier)
  this.rules[6].opcodes[5] = {type: 4, index: 44};// RNM(RWS)
  this.rules[6].opcodes[6] = {type: 4, index: 29};// RNM(identifier)
  this.rules[6].opcodes[7] = {type: 4, index: 43};// RNM(OWS)
  this.rules[6].opcodes[8] = {type: 7, string: [58]};// TLS
  this.rules[6].opcodes[9] = {type: 4, index: 43};// RNM(OWS)
  this.rules[6].opcodes[10] = {type: 4, index: 8};// RNM(typeReference)

  /* propertyModifier */
  this.rules[7].opcodes = [];
  this.rules[7].opcodes[0] = {type: 6, string: [107,101,121]};// TBS

  /* typeReference */
  this.rules[8].opcodes = [];
  this.rules[8].opcodes[0] = {type: 1, children: [1,5]};// ALT
  this.rules[8].opcodes[1] = {type: 2, children: [2,3]};// CAT
  this.rules[8].opcodes[2] = {type: 4, index: 9};// RNM(typeName)
  this.rules[8].opcodes[3] = {type: 3, min: 0, max: 1};// REP
  this.rules[8].opcodes[4] = {type: 7, string: [63]};// TLS
  this.rules[8].opcodes[5] = {type: 2, children: [6,7,8,10]};// CAT
  this.rules[8].opcodes[6] = {type: 7, string: [91]};// TLS
  this.rules[8].opcodes[7] = {type: 4, index: 9};// RNM(typeName)
  this.rules[8].opcodes[8] = {type: 3, min: 0, max: 1};// REP
  this.rules[8].opcodes[9] = {type: 7, string: [63]};// TLS
  this.rules[8].opcodes[10] = {type: 7, string: [93]};// TLS

  /* typeName */
  this.rules[9].opcodes = [];
  this.rules[9].opcodes[0] = {type: 1, children: [1,2,3]};// ALT
  this.rules[9].opcodes[1] = {type: 4, index: 10};// RNM(builtInType)
  this.rules[9].opcodes[2] = {type: 4, index: 11};// RNM(edmType)
  this.rules[9].opcodes[3] = {type: 4, index: 28};// RNM(qualifiedName)

  /* builtInType */
  this.rules[10].opcodes = [];
  this.rules[10].opcodes[0] = {type: 1, children: [1,2,3,4,13,14,15,16,23]};// ALT
  this.rules[10].opcodes[1] = {type: 6, string: [66,111,111,108,101,97,110]};// TBS
  this.rules[10].opcodes[2] = {type: 6, string: [68,97,116,101,84,105,109,101]};// TBS
  this.rules[10].opcodes[3] = {type: 6, string: [68,97,116,101]};// TBS
  this.rules[10].opcodes[4] = {type: 2, children: [5,6]};// CAT
  this.rules[10].opcodes[5] = {type: 6, string: [68,101,99,105,109,97,108]};// TBS
  this.rules[10].opcodes[6] = {type: 3, min: 0, max: 1};// REP
  this.rules[10].opcodes[7] = {type: 2, children: [8,9,10,11,12]};// CAT
  this.rules[10].opcodes[8] = {type: 7, string: [40]};// TLS
  this.rules[10].opcodes[9] = {type: 4, index: 34};// RNM(precision)
  this.rules[10].opcodes[10] = {type: 7, string: [44]};// TLS
  this.rules[10].opcodes[11] = {type: 4, index: 35};// RNM(scale)
  this.rules[10].opcodes[12] = {type: 7, string: [41]};// TLS
  this.rules[10].opcodes[13] = {type: 6, string: [68,111,117,98,108,101]};// TBS
  this.rules[10].opcodes[14] = {type: 6, string: [68,117,114,97,116,105,111,110]};// TBS
  this.rules[10].opcodes[15] = {type: 6, string: [73,110,116,101,103,101,114]};// TBS
  this.rules[10].opcodes[16] = {type: 2, children: [17,18]};// CAT
  this.rules[10].opcodes[17] = {type: 6, string: [83,116,114,105,110,103]};// TBS
  this.rules[10].opcodes[18] = {type: 3, min: 0, max: 1};// REP
  this.rules[10].opcodes[19] = {type: 2, children: [20,21,22]};// CAT
  this.rules[10].opcodes[20] = {type: 7, string: [40]};// TLS
  this.rules[10].opcodes[21] = {type: 4, index: 36};// RNM(maxLength)
  this.rules[10].opcodes[22] = {type: 7, string: [41]};// TLS
  this.rules[10].opcodes[23] = {type: 6, string: [84,105,109,101,79,102,68,97,121]};// TBS

  /* edmType */
  this.rules[11].opcodes = [];
  this.rules[11].opcodes[0] = {type: 2, children: [1,2,3]};// CAT
  this.rules[11].opcodes[1] = {type: 6, string: [69,100,109]};// TBS
  this.rules[11].opcodes[2] = {type: 7, string: [46]};// TLS
  this.rules[11].opcodes[3] = {type: 4, index: 29};// RNM(identifier)

  /* operation */
  this.rules[12].opcodes = [];
  this.rules[12].opcodes[0] = {type: 2, children: [1,2,3,4,5,6,7,8,18,19]};// CAT
  this.rules[12].opcodes[1] = {type: 4, index: 23};// RNM(annotations)
  this.rules[12].opcodes[2] = {type: 4, index: 13};// RNM(operationKind)
  this.rules[12].opcodes[3] = {type: 4, index: 44};// RNM(RWS)
  this.rules[12].opcodes[4] = {type: 4, index: 29};// RNM(identifier)
  this.rules[12].opcodes[5] = {type: 4, index: 43};// RNM(OWS)
  this.rules[12].opcodes[6] = {type: 7, string: [40]};// TLS
  this.rules[12].opcodes[7] = {type: 4, index: 43};// RNM(OWS)
  this.rules[12].opcodes[8] = {type: 3, min: 0, max: 1};// REP
  this.rules[12].opcodes[9] = {type: 2, children: [10,11,17]};// CAT
  this.rules[12].opcodes[10] = {type: 4, index: 14};// RNM(parameter)
  this.rules[12].opcodes[11] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[12].opcodes[12] = {type: 2, children: [13,14,15,16]};// CAT
  this.rules[12].opcodes[13] = {type: 4, index: 43};// RNM(OWS)
  this.rules[12].opcodes[14] = {type: 7, string: [44]};// TLS
  this.rules[12].opcodes[15] = {type: 4, index: 43};// RNM(OWS)
  this.rules[12].opcodes[16] = {type: 4, index: 14};// RNM(parameter)
  this.rules[12].opcodes[17] = {type: 4, index: 43};// RNM(OWS)
  this.rules[12].opcodes[18] = {type: 7, string: [41]};// TLS
  this.rules[12].opcodes[19] = {type: 3, min: 0, max: 1};// REP
  this.rules[12].opcodes[20] = {type: 2, children: [21,22,23,24,25]};// CAT
  this.rules[12].opcodes[21] = {type: 4, index: 43};// RNM(OWS)
  this.rules[12].opcodes[22] = {type: 7, string: [58]};// TLS
  this.rules[12].opcodes[23] = {type: 4, index: 43};// RNM(OWS)
  this.rules[12].opcodes[24] = {type: 4, index: 23};// RNM(annotations)
  this.rules[12].opcodes[25] = {type: 4, index: 8};// RNM(typeReference)

  /* operationKind */
  this.rules[13].opcodes = [];
  this.rules[13].opcodes[0] = {type: 1, children: [1,2]};// ALT
  this.rules[13].opcodes[1] = {type: 6, string: [97,99,116,105,111,110]};// TBS
  this.rules[13].opcodes[2] = {type: 6, string: [102,117,110,99,116,105,111,110]};// TBS

  /* parameter */
  this.rules[14].opcodes = [];
  this.rules[14].opcodes[0] = {type: 2, children: [1,2,3,4,5,6]};// CAT
  this.rules[14].opcodes[1] = {type: 4, index: 23};// RNM(annotations)
  this.rules[14].opcodes[2] = {type: 4, index: 29};// RNM(identifier)
  this.rules[14].opcodes[3] = {type: 4, index: 43};// RNM(OWS)
  this.rules[14].opcodes[4] = {type: 7, string: [58]};// TLS
  this.rules[14].opcodes[5] = {type: 4, index: 43};// RNM(OWS)
  this.rules[14].opcodes[6] = {type: 4, index: 8};// RNM(typeReference)

  /* enumType */
  this.rules[15].opcodes = [];
  this.rules[15].opcodes[0] = {type: 2, children: [1,2,5,6,7,8,9,10,12]};// CAT
  this.rules[15].opcodes[1] = {type: 4, index: 23};// RNM(annotations)
  this.rules[15].opcodes[2] = {type: 1, children: [3,4]};// ALT
  this.rules[15].opcodes[3] = {type: 6, string: [101,110,117,109]};// TBS
  this.rules[15].opcodes[4] = {type: 6, string: [102,108,97,103,115]};// TBS
  this.rules[15].opcodes[5] = {type: 4, index: 44};// RNM(RWS)
  this.rules[15].opcodes[6] = {type: 4, index: 29};// RNM(identifier)
  this.rules[15].opcodes[7] = {type: 4, index: 43};// RNM(OWS)
  this.rules[15].opcodes[8] = {type: 7, string: [123]};// TLS
  this.rules[15].opcodes[9] = {type: 4, index: 43};// RNM(OWS)
  this.rules[15].opcodes[10] = {type: 3, min: 1, max: Infinity};// REP
  this.rules[15].opcodes[11] = {type: 4, index: 16};// RNM(enumMember)
  this.rules[15].opcodes[12] = {type: 7, string: [125]};// TLS

  /* enumMember */
  this.rules[16].opcodes = [];
  this.rules[16].opcodes[0] = {type: 2, children: [1,2,3]};// CAT
  this.rules[16].opcodes[1] = {type: 4, index: 23};// RNM(annotations)
  this.rules[16].opcodes[2] = {type: 4, index: 29};// RNM(identifier)
  this.rules[16].opcodes[3] = {type: 4, index: 43};// RNM(OWS)

  /* typeDefinition */
  this.rules[17].opcodes = [];
  this.rules[17].opcodes[0] = {type: 2, children: [1,2,3,4,5,6,7,8]};// CAT
  this.rules[17].opcodes[1] = {type: 4, index: 23};// RNM(annotations)
  this.rules[17].opcodes[2] = {type: 6, string: [116,121,112,101,100,101,102]};// TBS
  this.rules[17].opcodes[3] = {type: 4, index: 44};// RNM(RWS)
  this.rules[17].opcodes[4] = {type: 4, index: 29};// RNM(identifier)
  this.rules[17].opcodes[5] = {type: 4, index: 43};// RNM(OWS)
  this.rules[17].opcodes[6] = {type: 7, string: [58]};// TLS
  this.rules[17].opcodes[7] = {type: 4, index: 43};// RNM(OWS)
  this.rules[17].opcodes[8] = {type: 1, children: [9,10]};// ALT
  this.rules[17].opcodes[9] = {type: 4, index: 10};// RNM(builtInType)
  this.rules[17].opcodes[10] = {type: 4, index: 11};// RNM(edmType)

  /* service */
  this.rules[18].opcodes = [];
  this.rules[18].opcodes[0] = {type: 2, children: [1,2,3,7,8,9,10,11,15,16]};// CAT
  this.rules[18].opcodes[1] = {type: 4, index: 23};// RNM(annotations)
  this.rules[18].opcodes[2] = {type: 6, string: [115,101,114,118,105,99,101]};// TBS
  this.rules[18].opcodes[3] = {type: 3, min: 0, max: 1};// REP
  this.rules[18].opcodes[4] = {type: 2, children: [5,6]};// CAT
  this.rules[18].opcodes[5] = {type: 4, index: 44};// RNM(RWS)
  this.rules[18].opcodes[6] = {type: 4, index: 29};// RNM(identifier)
  this.rules[18].opcodes[7] = {type: 4, index: 43};// RNM(OWS)
  this.rules[18].opcodes[8] = {type: 7, string: [123]};// TLS
  this.rules[18].opcodes[9] = {type: 4, index: 43};// RNM(OWS)
  this.rules[18].opcodes[10] = {type: 4, index: 19};// RNM(serviceMember)
  this.rules[18].opcodes[11] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[18].opcodes[12] = {type: 2, children: [13,14]};// CAT
  this.rules[18].opcodes[13] = {type: 4, index: 44};// RNM(RWS)
  this.rules[18].opcodes[14] = {type: 4, index: 19};// RNM(serviceMember)
  this.rules[18].opcodes[15] = {type: 4, index: 43};// RNM(OWS)
  this.rules[18].opcodes[16] = {type: 7, string: [125]};// TLS

  /* serviceMember */
  this.rules[19].opcodes = [];
  this.rules[19].opcodes[0] = {type: 2, children: [1,2]};// CAT
  this.rules[19].opcodes[1] = {type: 4, index: 23};// RNM(annotations)
  this.rules[19].opcodes[2] = {type: 1, children: [3,4,5]};// ALT
  this.rules[19].opcodes[3] = {type: 4, index: 20};// RNM(entitySet)
  this.rules[19].opcodes[4] = {type: 4, index: 21};// RNM(singleton)
  this.rules[19].opcodes[5] = {type: 4, index: 22};// RNM(serviceOperation)

  /* entitySet */
  this.rules[20].opcodes = [];
  this.rules[20].opcodes[0] = {type: 2, children: [1,2,3,4,5,6,7]};// CAT
  this.rules[20].opcodes[1] = {type: 4, index: 29};// RNM(identifier)
  this.rules[20].opcodes[2] = {type: 4, index: 43};// RNM(OWS)
  this.rules[20].opcodes[3] = {type: 7, string: [58]};// TLS
  this.rules[20].opcodes[4] = {type: 4, index: 43};// RNM(OWS)
  this.rules[20].opcodes[5] = {type: 7, string: [91]};// TLS
  this.rules[20].opcodes[6] = {type: 4, index: 28};// RNM(qualifiedName)
  this.rules[20].opcodes[7] = {type: 7, string: [93]};// TLS

  /* singleton */
  this.rules[21].opcodes = [];
  this.rules[21].opcodes[0] = {type: 2, children: [1,2,3,4,5]};// CAT
  this.rules[21].opcodes[1] = {type: 4, index: 29};// RNM(identifier)
  this.rules[21].opcodes[2] = {type: 4, index: 43};// RNM(OWS)
  this.rules[21].opcodes[3] = {type: 7, string: [58]};// TLS
  this.rules[21].opcodes[4] = {type: 4, index: 43};// RNM(OWS)
  this.rules[21].opcodes[5] = {type: 4, index: 28};// RNM(qualifiedName)

  /* serviceOperation */
  this.rules[22].opcodes = [];
  this.rules[22].opcodes[0] = {type: 2, children: [1,2,3,4,5,6,7,17,18]};// CAT
  this.rules[22].opcodes[1] = {type: 4, index: 13};// RNM(operationKind)
  this.rules[22].opcodes[2] = {type: 4, index: 44};// RNM(RWS)
  this.rules[22].opcodes[3] = {type: 4, index: 29};// RNM(identifier)
  this.rules[22].opcodes[4] = {type: 4, index: 43};// RNM(OWS)
  this.rules[22].opcodes[5] = {type: 7, string: [40]};// TLS
  this.rules[22].opcodes[6] = {type: 4, index: 43};// RNM(OWS)
  this.rules[22].opcodes[7] = {type: 3, min: 0, max: 1};// REP
  this.rules[22].opcodes[8] = {type: 2, children: [9,10,16]};// CAT
  this.rules[22].opcodes[9] = {type: 4, index: 14};// RNM(parameter)
  this.rules[22].opcodes[10] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[22].opcodes[11] = {type: 2, children: [12,13,14,15]};// CAT
  this.rules[22].opcodes[12] = {type: 4, index: 43};// RNM(OWS)
  this.rules[22].opcodes[13] = {type: 7, string: [44]};// TLS
  this.rules[22].opcodes[14] = {type: 4, index: 43};// RNM(OWS)
  this.rules[22].opcodes[15] = {type: 4, index: 14};// RNM(parameter)
  this.rules[22].opcodes[16] = {type: 4, index: 43};// RNM(OWS)
  this.rules[22].opcodes[17] = {type: 7, string: [41]};// TLS
  this.rules[22].opcodes[18] = {type: 3, min: 0, max: 1};// REP
  this.rules[22].opcodes[19] = {type: 2, children: [20,21,22,23,24]};// CAT
  this.rules[22].opcodes[20] = {type: 4, index: 43};// RNM(OWS)
  this.rules[22].opcodes[21] = {type: 7, string: [58]};// TLS
  this.rules[22].opcodes[22] = {type: 4, index: 43};// RNM(OWS)
  this.rules[22].opcodes[23] = {type: 4, index: 23};// RNM(annotations)
  this.rules[22].opcodes[24] = {type: 4, index: 8};// RNM(typeReference)

  /* annotations */
  this.rules[23].opcodes = [];
  this.rules[23].opcodes[0] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[23].opcodes[1] = {type: 2, children: [2,3]};// CAT
  this.rules[23].opcodes[2] = {type: 4, index: 24};// RNM(annotation)
  this.rules[23].opcodes[3] = {type: 4, index: 44};// RNM(RWS)

  /* annotation */
  this.rules[24].opcodes = [];
  this.rules[24].opcodes[0] = {type: 1, children: [1,12]};// ALT
  this.rules[24].opcodes[1] = {type: 2, children: [2,3,4,8,9,10,11]};// CAT
  this.rules[24].opcodes[2] = {type: 7, string: [64]};// TLS
  this.rules[24].opcodes[3] = {type: 4, index: 28};// RNM(qualifiedName)
  this.rules[24].opcodes[4] = {type: 3, min: 0, max: 1};// REP
  this.rules[24].opcodes[5] = {type: 2, children: [6,7]};// CAT
  this.rules[24].opcodes[6] = {type: 7, string: [35]};// TLS
  this.rules[24].opcodes[7] = {type: 4, index: 29};// RNM(identifier)
  this.rules[24].opcodes[8] = {type: 4, index: 43};// RNM(OWS)
  this.rules[24].opcodes[9] = {type: 7, string: [58]};// TLS
  this.rules[24].opcodes[10] = {type: 4, index: 43};// RNM(OWS)
  this.rules[24].opcodes[11] = {type: 4, index: 25};// RNM(annotationValue)
  this.rules[24].opcodes[12] = {type: 4, index: 37};// RNM(DOC-COMMENT)

  /* annotationValue */
  this.rules[25].opcodes = [];
  this.rules[25].opcodes[0] = {type: 1, children: [1,2,3,4,5,10,31,52]};// ALT
  this.rules[25].opcodes[1] = {type: 6, string: [116,114,117,101]};// TBS
  this.rules[25].opcodes[2] = {type: 6, string: [102,97,108,115,101]};// TBS
  this.rules[25].opcodes[3] = {type: 6, string: [110,117,108,108]};// TBS
  this.rules[25].opcodes[4] = {type: 4, index: 32};// RNM(number)
  this.rules[25].opcodes[5] = {type: 2, children: [6,7,9]};// CAT
  this.rules[25].opcodes[6] = {type: 4, index: 41};// RNM(DQUOTE)
  this.rules[25].opcodes[7] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[25].opcodes[8] = {type: 4, index: 40};// RNM(CHAR)
  this.rules[25].opcodes[9] = {type: 4, index: 41};// RNM(DQUOTE)
  this.rules[25].opcodes[10] = {type: 2, children: [11,12,13,30]};// CAT
  this.rules[25].opcodes[11] = {type: 7, string: [91]};// TLS
  this.rules[25].opcodes[12] = {type: 4, index: 43};// RNM(OWS)
  this.rules[25].opcodes[13] = {type: 3, min: 0, max: 1};// REP
  this.rules[25].opcodes[14] = {type: 2, children: [15,16,25,26]};// CAT
  this.rules[25].opcodes[15] = {type: 4, index: 25};// RNM(annotationValue)
  this.rules[25].opcodes[16] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[25].opcodes[17] = {type: 2, children: [18,24]};// CAT
  this.rules[25].opcodes[18] = {type: 1, children: [19,23]};// ALT
  this.rules[25].opcodes[19] = {type: 2, children: [20,21,22]};// CAT
  this.rules[25].opcodes[20] = {type: 4, index: 43};// RNM(OWS)
  this.rules[25].opcodes[21] = {type: 7, string: [44]};// TLS
  this.rules[25].opcodes[22] = {type: 4, index: 43};// RNM(OWS)
  this.rules[25].opcodes[23] = {type: 4, index: 44};// RNM(RWS)
  this.rules[25].opcodes[24] = {type: 4, index: 25};// RNM(annotationValue)
  this.rules[25].opcodes[25] = {type: 4, index: 43};// RNM(OWS)
  this.rules[25].opcodes[26] = {type: 3, min: 0, max: 1};// REP
  this.rules[25].opcodes[27] = {type: 2, children: [28,29]};// CAT
  this.rules[25].opcodes[28] = {type: 7, string: [44]};// TLS
  this.rules[25].opcodes[29] = {type: 4, index: 43};// RNM(OWS)
  this.rules[25].opcodes[30] = {type: 7, string: [93]};// TLS
  this.rules[25].opcodes[31] = {type: 2, children: [32,33,34,51]};// CAT
  this.rules[25].opcodes[32] = {type: 7, string: [123]};// TLS
  this.rules[25].opcodes[33] = {type: 4, index: 43};// RNM(OWS)
  this.rules[25].opcodes[34] = {type: 3, min: 0, max: 1};// REP
  this.rules[25].opcodes[35] = {type: 2, children: [36,37,46,47]};// CAT
  this.rules[25].opcodes[36] = {type: 4, index: 26};// RNM(annotationProperty)
  this.rules[25].opcodes[37] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[25].opcodes[38] = {type: 2, children: [39,45]};// CAT
  this.rules[25].opcodes[39] = {type: 1, children: [40,44]};// ALT
  this.rules[25].opcodes[40] = {type: 2, children: [41,42,43]};// CAT
  this.rules[25].opcodes[41] = {type: 4, index: 43};// RNM(OWS)
  this.rules[25].opcodes[42] = {type: 7, string: [44]};// TLS
  this.rules[25].opcodes[43] = {type: 4, index: 43};// RNM(OWS)
  this.rules[25].opcodes[44] = {type: 4, index: 44};// RNM(RWS)
  this.rules[25].opcodes[45] = {type: 4, index: 26};// RNM(annotationProperty)
  this.rules[25].opcodes[46] = {type: 4, index: 43};// RNM(OWS)
  this.rules[25].opcodes[47] = {type: 3, min: 0, max: 1};// REP
  this.rules[25].opcodes[48] = {type: 2, children: [49,50]};// CAT
  this.rules[25].opcodes[49] = {type: 7, string: [44]};// TLS
  this.rules[25].opcodes[50] = {type: 4, index: 43};// RNM(OWS)
  this.rules[25].opcodes[51] = {type: 7, string: [125]};// TLS
  this.rules[25].opcodes[52] = {type: 2, children: [53,54]};// CAT
  this.rules[25].opcodes[53] = {type: 7, string: [46]};// TLS
  this.rules[25].opcodes[54] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[25].opcodes[55] = {type: 2, children: [56,57]};// CAT
  this.rules[25].opcodes[56] = {type: 7, string: [47]};// TLS
  this.rules[25].opcodes[57] = {type: 4, index: 29};// RNM(identifier)

  /* annotationProperty */
  this.rules[26].opcodes = [];
  this.rules[26].opcodes[0] = {type: 2, children: [1,2,3,4,5]};// CAT
  this.rules[26].opcodes[1] = {type: 4, index: 27};// RNM(propertyName)
  this.rules[26].opcodes[2] = {type: 4, index: 43};// RNM(OWS)
  this.rules[26].opcodes[3] = {type: 7, string: [58]};// TLS
  this.rules[26].opcodes[4] = {type: 4, index: 43};// RNM(OWS)
  this.rules[26].opcodes[5] = {type: 4, index: 25};// RNM(annotationValue)

  /* propertyName */
  this.rules[27].opcodes = [];
  this.rules[27].opcodes[0] = {type: 1, children: [1,2,7]};// ALT
  this.rules[27].opcodes[1] = {type: 4, index: 29};// RNM(identifier)
  this.rules[27].opcodes[2] = {type: 2, children: [3,4,6]};// CAT
  this.rules[27].opcodes[3] = {type: 4, index: 41};// RNM(DQUOTE)
  this.rules[27].opcodes[4] = {type: 3, min: 1, max: Infinity};// REP
  this.rules[27].opcodes[5] = {type: 4, index: 40};// RNM(CHAR)
  this.rules[27].opcodes[6] = {type: 4, index: 41};// RNM(DQUOTE)
  this.rules[27].opcodes[7] = {type: 2, children: [8,9,10]};// CAT
  this.rules[27].opcodes[8] = {type: 7, string: [64]};// TLS
  this.rules[27].opcodes[9] = {type: 4, index: 28};// RNM(qualifiedName)
  this.rules[27].opcodes[10] = {type: 3, min: 0, max: 1};// REP
  this.rules[27].opcodes[11] = {type: 2, children: [12,13]};// CAT
  this.rules[27].opcodes[12] = {type: 7, string: [35]};// TLS
  this.rules[27].opcodes[13] = {type: 4, index: 29};// RNM(identifier)

  /* qualifiedName */
  this.rules[28].opcodes = [];
  this.rules[28].opcodes[0] = {type: 2, children: [1,2]};// CAT
  this.rules[28].opcodes[1] = {type: 4, index: 29};// RNM(identifier)
  this.rules[28].opcodes[2] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[28].opcodes[3] = {type: 2, children: [4,5]};// CAT
  this.rules[28].opcodes[4] = {type: 7, string: [46]};// TLS
  this.rules[28].opcodes[5] = {type: 4, index: 29};// RNM(identifier)

  /* identifier */
  this.rules[29].opcodes = [];
  this.rules[29].opcodes[0] = {type: 2, children: [1,2]};// CAT
  this.rules[29].opcodes[1] = {type: 4, index: 30};// RNM(identInitial)
  this.rules[29].opcodes[2] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[29].opcodes[3] = {type: 4, index: 31};// RNM(identSubsequent)

  /* identInitial */
  this.rules[30].opcodes = [];
  this.rules[30].opcodes[0] = {type: 1, children: [1,2]};// ALT
  this.rules[30].opcodes[1] = {type: 4, index: 38};// RNM(ALPHA)
  this.rules[30].opcodes[2] = {type: 7, string: [95]};// TLS

  /* identSubsequent */
  this.rules[31].opcodes = [];
  this.rules[31].opcodes[0] = {type: 1, children: [1,2]};// ALT
  this.rules[31].opcodes[1] = {type: 4, index: 30};// RNM(identInitial)
  this.rules[31].opcodes[2] = {type: 4, index: 39};// RNM(DIGIT)

  /* number */
  this.rules[32].opcodes = [];
  this.rules[32].opcodes[0] = {type: 2, children: [1,2,7]};// CAT
  this.rules[32].opcodes[1] = {type: 4, index: 33};// RNM(integer)
  this.rules[32].opcodes[2] = {type: 3, min: 0, max: 1};// REP
  this.rules[32].opcodes[3] = {type: 2, children: [4,5]};// CAT
  this.rules[32].opcodes[4] = {type: 7, string: [46]};// TLS
  this.rules[32].opcodes[5] = {type: 3, min: 1, max: Infinity};// REP
  this.rules[32].opcodes[6] = {type: 4, index: 39};// RNM(DIGIT)
  this.rules[32].opcodes[7] = {type: 3, min: 0, max: 1};// REP
  this.rules[32].opcodes[8] = {type: 2, children: [9,10]};// CAT
  this.rules[32].opcodes[9] = {type: 7, string: [101]};// TLS
  this.rules[32].opcodes[10] = {type: 4, index: 33};// RNM(integer)

  /* integer */
  this.rules[33].opcodes = [];
  this.rules[33].opcodes[0] = {type: 2, children: [1,5]};// CAT
  this.rules[33].opcodes[1] = {type: 3, min: 0, max: 1};// REP
  this.rules[33].opcodes[2] = {type: 1, children: [3,4]};// ALT
  this.rules[33].opcodes[3] = {type: 7, string: [43]};// TLS
  this.rules[33].opcodes[4] = {type: 7, string: [45]};// TLS
  this.rules[33].opcodes[5] = {type: 1, children: [6,7]};// ALT
  this.rules[33].opcodes[6] = {type: 6, string: [48]};// TBS
  this.rules[33].opcodes[7] = {type: 2, children: [8,9]};// CAT
  this.rules[33].opcodes[8] = {type: 5, min: 49, max: 57};// TRG
  this.rules[33].opcodes[9] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[33].opcodes[10] = {type: 4, index: 39};// RNM(DIGIT)

  /* precision */
  this.rules[34].opcodes = [];
  this.rules[34].opcodes[0] = {type: 4, index: 33};// RNM(integer)

  /* scale */
  this.rules[35].opcodes = [];
  this.rules[35].opcodes[0] = {type: 4, index: 33};// RNM(integer)

  /* maxLength */
  this.rules[36].opcodes = [];
  this.rules[36].opcodes[0] = {type: 4, index: 33};// RNM(integer)

  /* DOC-COMMENT */
  this.rules[37].opcodes = [];
  this.rules[37].opcodes[0] = {type: 2, children: [1,2]};// CAT
  this.rules[37].opcodes[1] = {type: 7, string: [35,35]};// TLS
  this.rules[37].opcodes[2] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[37].opcodes[3] = {type: 1, children: [4,5,6]};// ALT
  this.rules[37].opcodes[4] = {type: 5, min: 0, max: 9};// TRG
  this.rules[37].opcodes[5] = {type: 5, min: 11, max: 12};// TRG
  this.rules[37].opcodes[6] = {type: 5, min: 14, max: 1114111};// TRG

  /* ALPHA */
  this.rules[38].opcodes = [];
  this.rules[38].opcodes[0] = {type: 1, children: [1,2]};// ALT
  this.rules[38].opcodes[1] = {type: 5, min: 65, max: 90};// TRG
  this.rules[38].opcodes[2] = {type: 5, min: 97, max: 122};// TRG

  /* DIGIT */
  this.rules[39].opcodes = [];
  this.rules[39].opcodes[0] = {type: 5, min: 48, max: 57};// TRG

  /* CHAR */
  this.rules[40].opcodes = [];
  this.rules[40].opcodes[0] = {type: 1, children: [1,2,3,4,7]};// ALT
  this.rules[40].opcodes[1] = {type: 5, min: 32, max: 33};// TRG
  this.rules[40].opcodes[2] = {type: 5, min: 35, max: 91};// TRG
  this.rules[40].opcodes[3] = {type: 5, min: 93, max: 1114111};// TRG
  this.rules[40].opcodes[4] = {type: 2, children: [5,6]};// CAT
  this.rules[40].opcodes[5] = {type: 4, index: 42};// RNM(ESCAPE)
  this.rules[40].opcodes[6] = {type: 4, index: 42};// RNM(ESCAPE)
  this.rules[40].opcodes[7] = {type: 2, children: [8,9]};// CAT
  this.rules[40].opcodes[8] = {type: 4, index: 42};// RNM(ESCAPE)
  this.rules[40].opcodes[9] = {type: 4, index: 41};// RNM(DQUOTE)

  /* DQUOTE */
  this.rules[41].opcodes = [];
  this.rules[41].opcodes[0] = {type: 6, string: [34]};// TBS

  /* ESCAPE */
  this.rules[42].opcodes = [];
  this.rules[42].opcodes[0] = {type: 6, string: [92]};// TBS

  /* OWS */
  this.rules[43].opcodes = [];
  this.rules[43].opcodes[0] = {type: 3, min: 0, max: Infinity};// REP
  this.rules[43].opcodes[1] = {type: 4, index: 45};// RNM(WS)

  /* RWS */
  this.rules[44].opcodes = [];
  this.rules[44].opcodes[0] = {type: 3, min: 1, max: Infinity};// REP
  this.rules[44].opcodes[1] = {type: 4, index: 45};// RNM(WS)

  /* WS */
  this.rules[45].opcodes = [];
  this.rules[45].opcodes[0] = {type: 1, children: [1,2,3,4]};// ALT
  this.rules[45].opcodes[1] = {type: 6, string: [8]};// TBS
  this.rules[45].opcodes[2] = {type: 6, string: [10]};// TBS
  this.rules[45].opcodes[3] = {type: 6, string: [13]};// TBS
  this.rules[45].opcodes[4] = {type: 6, string: [32]};// TBS

  // The `toString()` function will display the original grammar file(s) that produced these opcodes.
  this.toString = function toString(){
    let str = "";
    str += ";----------------------------\r\n";
    str += "; ABNF for RSDL\r\n";
    str += ";----------------------------\r\n";
    str += "\r\n";
    str += "\r\n";
    str += ";----------------------------\r\n";
    str += ";  Model\r\n";
    str += ";----------------------------\r\n";
    str += "\r\n";
    str += "model                = OWS [ namespace RWS ] *include [ modelElement *( RWS modelElement ) ] OWS\r\n";
    str += "\r\n";
    str += "namespace            = %s\"namespace\" RWS qualifiedName\r\n";
    str += "\r\n";
    str += "include              = %s\"include\" RWS DQUOTE 1*CHAR DQUOTE RWS %s\"as\" RWS identifier RWS\r\n";
    str += "\r\n";
    str += "modelElement         = ( structuredType / enumType / typeDefinition / service )\r\n";
    str += "\r\n";
    str += "\r\n";
    str += ";----------------------------\r\n";
    str += ";  Structured Type\r\n";
    str += ";----------------------------\r\n";
    str += "\r\n";
    str += "structuredType       = annotations [ %s\"abstract\" RWS ] %s\"type\" RWS identifier [ %s\"extends\" RWS qualifiedName ] OWS \"{\" *( OWS structuredTypeMember ) OWS \"}\"\r\n";
    str += "\r\n";
    str += "structuredTypeMember = property / operation ; property, action, or function\r\n";
    str += "\r\n";
    str += "property             = annotations [propertyModifier RWS] identifier OWS \":\" OWS typeReference\r\n";
    str += "\r\n";
    str += "propertyModifier     = %s\"key\"\r\n";
    str += "\r\n";
    str += "typeReference        = typeName [ \"?\" ] / \"[\" typeName [ \"?\" ] \"]\"\r\n";
    str += "\r\n";
    str += "typeName             = builtInType / edmType / qualifiedName\r\n";
    str += "\r\n";
    str += "builtInType          = %s\"Boolean\"\r\n";
    str += "                     / %s\"DateTime\"\r\n";
    str += "                     / %s\"Date\"\r\n";
    str += "                     / %s\"Decimal\" [ \"(\" precision \",\" scale \")\"]\r\n";
    str += "                     / %s\"Double\"\r\n";
    str += "                     / %s\"Duration\"\r\n";
    str += "                     / %s\"Integer\"\r\n";
    str += "                     / %s\"String\" [ \"(\" maxLength \")\" ]\r\n";
    str += "                     / %s\"TimeOfDay\"\r\n";
    str += "\r\n";
    str += "edmType              = %s\"Edm\" \".\" identifier\r\n";
    str += "\r\n";
    str += "operation            = annotations operationKind RWS identifier OWS\r\n";
    str += "                       \"(\" OWS [ parameter *( OWS \",\" OWS parameter) OWS ] \")\"\r\n";
    str += "                       [ OWS \":\" OWS annotations typeReference ]\r\n";
    str += "\r\n";
    str += "operationKind        = %s\"action\" / %s\"function\"\r\n";
    str += "\r\n";
    str += "parameter            = annotations identifier OWS \":\" OWS typeReference\r\n";
    str += "\r\n";
    str += "\r\n";
    str += ";----------------------------\r\n";
    str += ";  Enumeration Type\r\n";
    str += ";----------------------------\r\n";
    str += "\r\n";
    str += "enumType             = annotations ( %s\"enum\" / %s\"flags\" ) RWS identifier OWS \"{\" OWS 1*enumMember \"}\"\r\n";
    str += "\r\n";
    str += "enumMember           = annotations identifier OWS\r\n";
    str += "\r\n";
    str += "\r\n";
    str += ";----------------------------\r\n";
    str += ";  Type Definition\r\n";
    str += ";----------------------------\r\n";
    str += "\r\n";
    str += "typeDefinition       = annotations %s\"typedef\" RWS identifier OWS \":\" OWS ( builtInType / edmType )\r\n";
    str += "\r\n";
    str += "\r\n";
    str += ";----------------------------\r\n";
    str += ";  Service\r\n";
    str += ";----------------------------\r\n";
    str += "\r\n";
    str += "service              = annotations %s\"service\" [ RWS identifier ] OWS \"{\" OWS serviceMember *( RWS serviceMember ) OWS \"}\"\r\n";
    str += "\r\n";
    str += "serviceMember        = annotations ( entitySet / singleton / serviceOperation )\r\n";
    str += "\r\n";
    str += "entitySet            = identifier OWS \":\" OWS \"[\" qualifiedName \"]\"\r\n";
    str += "\r\n";
    str += "singleton            = identifier OWS \":\" OWS qualifiedName\r\n";
    str += "\r\n";
    str += "serviceOperation     = operationKind RWS identifier\r\n";
    str += "                       OWS \"(\" OWS [ parameter *(OWS \",\" OWS parameter) OWS ] \")\"\r\n";
    str += "                       [ OWS \":\" OWS annotations typeReference ]\r\n";
    str += "\r\n";
    str += "\r\n";
    str += ";----------------------------\r\n";
    str += ";  Annotations\r\n";
    str += ";----------------------------\r\n";
    str += "\r\n";
    str += "annotations          = *( annotation RWS )\r\n";
    str += "\r\n";
    str += "annotation           = \"@\" qualifiedName [ \"#\" identifier ] OWS \":\" OWS annotationValue / DOC-COMMENT\r\n";
    str += "\r\n";
    str += "annotationValue      = %s\"true\"\r\n";
    str += "                     / %s\"false\"\r\n";
    str += "                     / %s\"null\"\r\n";
    str += "                     / number\r\n";
    str += "                     / DQUOTE *CHAR DQUOTE\r\n";
    str += "                     / \"[\" OWS [ annotationValue *( ( OWS \",\" OWS / RWS ) annotationValue ) OWS [ \",\" OWS ] ] \"]\"\r\n";
    str += "                     / \"{\" OWS [ annotationProperty *( ( OWS \",\" OWS /RWS ) annotationProperty ) OWS [ \",\" OWS ] ] \"}\"\r\n";
    str += "                     / \".\" *( \"/\"  identifier )\r\n";
    str += "\r\n";
    str += "annotationProperty   = propertyName OWS \":\" OWS annotationValue\r\n";
    str += "\r\n";
    str += "propertyName         = identifier / DQUOTE 1*CHAR DQUOTE / \"@\" qualifiedName [ \"#\" identifier ]\r\n";
    str += "\r\n";
    str += "\r\n";
    str += ";----------------------------\r\n";
    str += ";  Core Syntax Elements\r\n";
    str += ";----------------------------\r\n";
    str += "\r\n";
    str += "qualifiedName       = identifier *( \".\" identifier )\r\n";
    str += "\r\n";
    str += "identifier          = identInitial *identSubsequent\r\n";
    str += "\r\n";
    str += "identInitial        = ALPHA / \"_\" ; Note: actually all Unicode letters\r\n";
    str += "\r\n";
    str += "identSubsequent     = identInitial / DIGIT\r\n";
    str += "\r\n";
    str += "number              = integer [ \".\" 1*DIGIT ] [ \"e\" integer ]\r\n";
    str += "\r\n";
    str += "integer             = [ \"+\" / \"-\" ] ( %x30 / %x31-39 *DIGIT )\r\n";
    str += "\r\n";
    str += "precision           = integer\r\n";
    str += "\r\n";
    str += "scale               = integer\r\n";
    str += "\r\n";
    str += "maxLength           = integer\r\n";
    str += "\r\n";
    str += "DOC-COMMENT         = \"##\" *( %x0-9 / %xB-C / %xE-10FFFF)\r\n";
    str += "\r\n";
    str += "ALPHA               = %x41-5A / %x61-7A\r\n";
    str += "\r\n";
    str += "DIGIT               = %x30-39\r\n";
    str += "\r\n";
    str += "CHAR                = %x20-21 / %x23-5B / %x5D-10FFFF\r\n";
    str += "                    / ESCAPE ESCAPE\r\n";
    str += "                    / ESCAPE DQUOTE\r\n";
    str += "\r\n";
    str += "DQUOTE              = %x22              ; \"\r\n";
    str += "\r\n";
    str += "ESCAPE              = %x5C              ; \\\r\n";
    str += "\r\n";
    str += "OWS                 = *WS\r\n";
    str += "RWS                 = 1*WS\r\n";
    str += "WS                  = %x8 / %xA / %xD / %x20 ; TAB, LF, CR, SPACE\r\n";
    return str;
  }
}
