"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[562],{5318:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>y});var i=n(7378);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),c=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},l=function(e){var t=c(e.components);return i.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),m=c(n),y=r,u=m["".concat(s,".").concat(y)]||m[y]||d[y]||o;return n?i.createElement(u,a(a({ref:t},l),{},{components:n})):i.createElement(u,a({ref:t},l))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=m;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,a[1]=p;for(var c=2;c<o;c++)a[c]=n[c];return i.createElement.apply(null,a)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7089:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>c});var i=n(5773),r=(n(7378),n(5318));const o={id:"servicedescription",title:"Runtime Service Description"},a=void 0,p={unversionedId:"spec/servicedescription",id:"spec/servicedescription",title:"Runtime Service Description",description:"Client applications and tooling can use a runtime service description to understand how to interact with the service.",source:"@site/../docs/spec/rapid-pro-resource_description.md",sourceDirName:"spec",slug:"/spec/servicedescription",permalink:"/docs/spec/servicedescription",draft:!1,editUrl:"https://github.com/oasis-open/odata-rapid/edit/main/docs/../docs/spec/rapid-pro-resource_description.md",tags:[],version:"current",frontMatter:{id:"servicedescription",title:"Runtime Service Description"},sidebar:"docs",previous:{title:"Actions and Functions",permalink:"/docs/operations"},next:{title:"Batch Operations",permalink:"/docs/spec/batch"}},s={},c=[{value:"Types",id:"types",level:2},{value:"Properties",id:"properties",level:2},{value:"Meta Properties",id:"meta-properties",level:3},{value:"Types",id:"types-1",level:4},{value:"Collections",id:"collections",level:4},{value:"Dynamic Properties",id:"dynamic-properties",level:3},{value:"Service Entity Container",id:"service-entity-container",level:2}],l={toc:c};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Client applications and tooling can use a runtime service description to understand how to interact with the service.\nBy convention, this description is retrieved by requesting the ",(0,r.kt)("inlineCode",{parentName:"p"},"/$metadata")," resource, located at the root of the service."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Example"),(0,r.kt)("th",{parentName:"tr",align:"left"},"GET ",(0,r.kt)("a",{parentName:"th",href:"https://jetsons.azurewebsites.net/$metadata?$format=application/json"},(0,r.kt)("inlineCode",{parentName:"a"},"https://jetsons.azurewebsites.net/$metadata")),(0,r.kt)("br",null),"Accept: application/json")))),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"Result:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$Version": "4.01",\n  "jetsons": {\n    "company": {\n      "$Kind": "EntityType",\n      "$Key": ["stockSymbol"],\n      "name": { "Type": "Edm.String" },\n      "incorporated": { "$Type": "Edm.Date" },\n      "stockSymbol": {},\n      "employees": {\n        "$Kind": "NavigationProperty",\n        "$Collection": true,\n        "$Type": "jetsons.employee",\n        "$ContainsTarget": true\n      }\n    },\n    "employee": {\n      "$Kind": "EntityType",\n      "$Key": ["id"],\n      "id": { "$Type": "Edm.Int32" },\n      "firstName": { "$Type": "Edm.String" },\n      "lastName": { "$Type": "Edm.String" },\n      "title": { "$Type": "Edm.String" }\n    },\n    "Service": {\n      "$Kind": "EntityContainer",\n      "company": {\n        "$Type": "jetsons.company"\n      },\n      "competitors": {\n        "$Collection": true,\n        "$Type": "jetsons.company"\n      }\n    },\n    "$EntityContainer": "jetsons.Service"\n  }\n}\n')),(0,r.kt)("h2",{id:"types"},"Types"),(0,r.kt)("p",null,"Types are defined within a namespace. The namespace defined for this service is ",(0,r.kt)("inlineCode",{parentName:"p"},"jetsons"),"."),(0,r.kt)("p",null,"Within the ",(0,r.kt)("inlineCode",{parentName:"p"},"jetsons")," namespace two types are defined: ",(0,r.kt)("inlineCode",{parentName:"p"},"company")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"employee"),"."),(0,r.kt)("h2",{id:"properties"},"Properties"),(0,r.kt)("h3",{id:"meta-properties"},"Meta Properties"),(0,r.kt)("p",null,"Properties representing meta information about the model, such as key, type, kind, collection, contains target,\nand entity container, are prefixed with a dollar sign (",(0,r.kt)("inlineCode",{parentName:"p"},"$"),")."),(0,r.kt)("h4",{id:"types-1"},"Types"),(0,r.kt)("p",null,"By default, properties are strings.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"$Type")," property specifies the type for the core ",(0,r.kt)("inlineCode",{parentName:"p"},"Edm.String"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Edm.Int32"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"Edm.Double"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Edm.Boolean"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Edm.Date"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"Edm.Time"),", and ",(0,r.kt)("inlineCode",{parentName:"p"},"Edm.DateTimeOffset")," properties.\nMore advanced services may define stream, binary, geography, or geometry types."),(0,r.kt)("h4",{id:"collections"},"Collections"),(0,r.kt)("p",null,"Because the ",(0,r.kt)("inlineCode",{parentName:"p"},"employee")," type is used in a collection,\nit defines a property (",(0,r.kt)("inlineCode",{parentName:"p"},"id"),") as the key value for referencing instances within the collection."),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"company")," type has a property for navigating to a collection of employees.\nThe employees are contained within the company; that is, they do not exist in a separate top-level collection."),(0,r.kt)("h3",{id:"dynamic-properties"},"Dynamic Properties"),(0,r.kt)("p",null,'Resources can also include properties not advertised in metadata.\nThese "dynamic" properties can be referenced in query options and included in result payloads,\njust like normal declared properties.'),(0,r.kt)("h2",{id:"service-entity-container"},"Service Entity Container"),(0,r.kt)("p",null,"The last line defines the ",(0,r.kt)("inlineCode",{parentName:"p"},"Service")," entity container as the root of the service. Its members are top-level resources exposed by the service;\n",(0,r.kt)("inlineCode",{parentName:"p"},"company")," is a single instance of the ",(0,r.kt)("inlineCode",{parentName:"p"},"company")," type, and ",(0,r.kt)("inlineCode",{parentName:"p"},"competitors")," is a collection of companies."))}d.isMDXComponent=!0}}]);