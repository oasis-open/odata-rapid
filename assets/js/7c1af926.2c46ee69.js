"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[530],{5318:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var i=n(7378);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=i.createContext({}),s=function(e){var t=i.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=s(e.components);return i.createElement(p.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=s(n),y=a,S=m["".concat(p,".").concat(y)]||m[y]||d[y]||r;return n?i.createElement(S,l(l({ref:t},c),{},{components:n})):i.createElement(S,l({ref:t},c))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,l=new Array(r);l[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var s=2;s<r;s++)l[s]=n[s];return i.createElement.apply(null,l)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1672:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>r,metadata:()=>o,toc:()=>s});var i=n(5773),a=(n(7378),n(5318));const r={id:"rsdl-abnf",title:"RSDL ABNF"},l="RAPID Schema Definition Language (RSDL) Syntax",o={unversionedId:"rsdl/rsdl-abnf",id:"rsdl/rsdl-abnf",title:"RSDL ABNF",description:"Overview",source:"@site/../docs/rsdl/rapid-rsdl-abnf.md",sourceDirName:"rsdl",slug:"/rsdl/rsdl-abnf",permalink:"/docs/rsdl/rsdl-abnf",draft:!1,editUrl:"https://github.com/oasis-open/odata-rapid/edit/main/docs/../docs/rsdl/rapid-rsdl-abnf.md",tags:[],version:"current",frontMatter:{id:"rsdl-abnf",title:"RSDL ABNF"},sidebar:"docs",previous:{title:"RSDL Capabilities",permalink:"/docs/rsdl/rsdl-capabilities"},next:{title:"RAPID and OData",permalink:"/docs/related/odata"}},p={},s=[{value:"Overview",id:"overview",level:2},{value:"Syntax rules",id:"syntax-rules",level:2},{value:"Model",id:"model",level:3},{value:"Structured Type",id:"structured-type",level:3},{value:"Enumeration Type",id:"enumeration-type",level:3},{value:"Type Definition",id:"type-definition",level:3},{value:"Service",id:"service",level:3},{value:"Annotations",id:"annotations",level:3},{value:"Model Capabilities",id:"model-capabilities",level:3},{value:"Paths",id:"paths",level:3},{value:"Path Capabilities",id:"path-capabilities",level:3},{value:"Capability Elements",id:"capability-elements",level:3},{value:"Core Syntax Elements",id:"core-syntax-elements",level:3}],c={toc:s};function d(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"rapid-schema-definition-language-rsdl-syntax"},"RAPID Schema Definition Language (RSDL) Syntax"),(0,a.kt)("h2",{id:"overview"},"Overview"),(0,a.kt)("p",null,"This grammar uses ABNF as defined by ",(0,a.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc5234"},"RFC5234"),", with the addition for case-sensitive strings defined by ",(0,a.kt)("a",{parentName:"p",href:"https://tools.ietf.org/html/rfc7405"},"RFC7405")),(0,a.kt)("p",null,"Note: to increase readability of the grammar, whitespace is not reflected"),(0,a.kt)("h2",{id:"syntax-rules"},"Syntax rules"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#rapid-schema-definition-language-(RSDL)-Syntax"},"RAPID Schema Definition Language (RSDL) Syntax"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#overview"},"Overview")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#syntax-rules"},"Syntax rules"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#model"},"Model")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#structured-type"},"Structured Type")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#enumeration-type"},"Enumeration Type")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#type-definition"},"Type Definition")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#service"},"Service")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#annotations"},"Annotations")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#model-capabilities"},"Model Capabilities")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#paths"},"Paths")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#path-capabilities"},"Path Capabilities")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#capability-elements"},"Capability Elements")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"#core-syntax-elements"},"Core Syntax Elements"))))))),(0,a.kt)("h3",{id:"model"},"Model"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ABNF"},'model                = OWS [ namespace RWS ] *include [ modelElement *( RWS modelElement ) ] [ OWS service ] [ OWS paths ] OWS\n\nnamespace            = %s"namespace" RWS qualifiedName\n\ninclude              = %s"include" RWS DQUOTE 1*CHAR DQUOTE RWS %s"as" RWS identifier RWS\n\nmodelElement         = ( structuredType / enumType / typeDefinition )\n')),(0,a.kt)("h3",{id:"structured-type"},"Structured Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ABNF"},'structuredType       = annotations [ %s"abstract" RWS ] %s"type" RWS identifier [ %s"extends" RWS qualifiedName ] OWS "{" *( OWS structuredTypeMember ) OWS "}"\n\nstructuredTypeMember = property / operation ; property, action, or function\n\nproperty             = singlePropertyDefinition [ OWS (primitivePropertyCapabilities / singleNavigationCapabilities) ]\n                     / collectionPropertyDefinition [ OWS ( collectionCapabilities / collectionNavigationCapabilities) ]\n\nsinglePropertyDefinition  = annotations [propertyModifier RWS] identifier OWS ":" OWS singleTypeReference\n\ncollectionPropertyDefinition  = annotations identifier OWS ":" OWS collectionTypeReference\n\npropertyModifier     = %s"key"\n\nsingleTypeReference      = typeName [ "?" ]\n\ncollectionTypeReference  = "[" typeName [ "?" ] "]"\n\ntypeReference            = singleTypeReference / collectionTypeReference\n\ntypeName             = builtInType / edmType / qualifiedName\n\nbuiltInType          = %s"Boolean"\n                     / %s"DateTime"\n                     / %s"Date"\n                     / %s"Decimal" [ "(" precision "," scale ")"]\n                     / %s"Double"\n                     / %s"Duration"\n                     / %s"Integer"\n                     / %s"String" [ "(" maxLength ")" ]\n                     / %s"TimeOfDay"\n\nedmType              = %s"Edm" "." identifier\n\noperation            = annotations operationKind RWS identifier OWS\n                       "(" OWS [ parameter *( OWS "," OWS parameter) OWS ] ")"\n                       [ OWS ":" OWS annotations typeReference ]\n                       [ separator collectionNavCapabilities ]\n\noperationKind        = %s"action" / %s"function"\n\nparameter            = annotations identifier OWS ":" OWS typeReference\n')),(0,a.kt)("h3",{id:"enumeration-type"},"Enumeration Type"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ABNF"},'enumType             = annotations ( %s"enum" / %s"flags" ) RWS identifier OWS "{" OWS 1*enumMember "}"\n\nenumMember           = annotations identifier OWS\n')),(0,a.kt)("h3",{id:"type-definition"},"Type Definition"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ABNF"},'typeDefinition       = annotations %s"typedef" RWS identifier OWS ":" OWS ( builtInType / edmType )\n')),(0,a.kt)("h3",{id:"service"},"Service"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ABNF"},'service              = annotations %s"service" [ RWS identifier ] OWS "{" OWS serviceMember *( RWS serviceMember ) OWS "}"\n\nserviceMember        = annotations ( entitySet / singleton / serviceOperation )\n\nentitySet            = identifier OWS ":" OWS "[" qualifiedName "]" [ OWS collectionNavigationCapabilities ]\n\nsingleton            = identifier OWS ":" OWS qualifiedName [ OWS singleNavigationCapabilities ]\n\nserviceOperation     = operationKind RWS identifier\n                       OWS "(" OWS [ parameter *(OWS "," OWS parameter) OWS ] ")"\n                       [ OWS ":" OWS annotations typeReference ]\n')),(0,a.kt)("h3",{id:"annotations"},"Annotations"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ABNF"},'annotations          = *( annotation RWS )\n\nannotation           = "@" qualifiedName [ "#" identifier ] OWS ":" OWS annotationValue / DOC-COMMENT\n\nannotationValue      = %s"true"\n                     / %s"false"\n                     / %s"null"\n                     / number\n                     / DQUOTE *CHAR DQUOTE\n                     / "[" OWS [ annotationValue *( separator annotationValue ) OWS [ "," OWS ] ] "]"\n                     / "{" OWS [ annotationProperty *( separator annotationProperty ) OWS [ "," OWS ] ] "}"\n                     / "." *( "/"  identifier )\n\nannotationProperty   = propertyName OWS ":" OWS annotationValue\n\npropertyName         = identifier / DQUOTE 1*CHAR DQUOTE / "@" qualifiedName [ "#" identifier ]\n')),(0,a.kt)("h3",{id:"model-capabilities"},"Model Capabilities"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ABNF"},'primitivePropertyCapability = "filterable" [ OWS filterOptions ] / "orderable" [ OWS orderByDirection ]\n\nprimitivePropertyCapabilities = "{" OWS [ primitivePropertyCapability *( separator primitivePropertyCapability )] OWS "}"\n\nsingleNavigationCapability = ("READ" / "UPDATE" / "REPLACE") [ OWS navCapabilities ] / "DELETE" noOptions\n\nsingleNavigationCapabilities = "{" OWS [ singleNavigationCapability *( separator singleNavigationCapability )] OWS "}"\n\ncollectionNavigationCapability = "DELETE" OWS noOptions\n                              / "LIST" [ OWS collectionNavCapabilities ]\n                              / ("READ" / "CREATE" / "REPLACE" / "UPDATE") [ OWS navCapabilities ]\n\ncollectionNavigationCapabilities = "{" OWS [ collectionNavigationCapability *( separator collectionNavigationCapability )] OWS "}"\n\n')),(0,a.kt)("h3",{id:"paths"},"Paths"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ABNF"},'paths = %s"paths" OWS "{" *( OWS "/" path ) OWS "}"\n\npath =  propertySegment "/" keySegment [ pathSegment / ( RWS singleNavPathCapabilities ) ]\n        / serviceOperationSegment "/" keySegment [ pathSegment / ( RWS singleNavPathCapabilities ) ]\n        / serviceOperationSegment [ pathSegment / ( RWS capabilities ) ]\n        / castSegment [ pathSegment / ( RWS capabilities ) ]\n        / propertySegment  [  pathSegment / ( RWS capabilities ) ]\n\npropertySegment = identifier;  structural or navigation property\n\npathSegment = "/" path\n\ncastSegment = identifier 1*( "." identifier )      ; qualified type name\n\nkeySegment = "{" keyProperty "}"\n\nkeyProperty = identifier                           ; name of the key property\n\nserviceOperationSegment = identifier parameters [ "/" castSegment ] [ "/" keySegment ]\n\nparameters = "(" OWS [ parameterSpecification *( "," OWS parameterSpecification ) OWS ] ")"\n\nparameterSpecification = identifier OWS "=" OWS "{" identifier "}"\n\ncapabilities = singlePathCapabilities / collectionPathCapabilities / singleNavPathCapabilities / collectionNavPathCapabilities\n\n')),(0,a.kt)("h3",{id:"path-capabilities"},"Path Capabilities"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ABNF"},'\nsinglePathCapability = ("GET" / "PUT" / "PATCH" / "DELETE") [noOptions]\n\nsinglePathCapabilities = "{" OWS [singlePathCapability *( separator singlePathCapability) OWS] "}"\n\ncollectionPathCapability = "GET" [ collectionCapabilities ] / "POST" [noOptions]\n\ncollectionPathCapabilities = "{" OWS [ collectionPathCapability *( separator collectionPathCapability ) OWS ] "}"\n\nsingleNavPathCapability = ("GET" / "PATCH" / "PUT") [ OWS navCapabilities ] / "DELETE" noOptions\n\nsingleNavPathCapabilities = "{" OWS [singleNavPathCapability *( separator singleNavPathCapability ) OWS ] "}"\n\ncollectionNavPathCapability = "GET" [ OWS collectionNavCapabilities ] / "POST" [ OWS navCapabilities ]\n\ncollectionNavPathCapabilities = "{" OWS [ collectionNavPathCapability *( separator collectionNavPathCapability ) OWS ] "}"\n\n')),(0,a.kt)("h3",{id:"capability-elements"},"Capability Elements"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ABNF"},'\ncollectionCapability = filterCapability / orderByCapability / "top" / "skip" / "count"\n\ncollectionCapabilities =  "{" OWS [ collectionCapability *( separator collectionCapability ) OWS ] "}"\n\ncollectionNavCapability = collectionCapability / navCapability\n\ncollectionNavCapabilities = "{" OWS [ collectionNavCapability *( separator collectionNavCapability ) OWS ] "}"\n\nnavCapability       = "expand" [ OWS "{" OWS [ expandProperty *( OWS "," OWS expandProperty OWS ) ] OWS "}" ]\n\nnavCapabilities     =  "{" OWS [ navCapability OWS ] "}"\n\nexpandProperty      = star / [ castSegment "/" ] navigationProperty ( [ OWS collectionNavCapabilities ] / [ OWS navCapabilities ] )\n\nnavigationProperty = identifier     ; single or collection valued navigation property\n\nfilterCapability    = "filter" [ "{" [ OWS filterProperty *( "," OWS filterProperty OWS ) ] "}" ]\n\nfilterProperty    = ( ( [ typeName "/" ] propertyName ) / allProperties) [ OWS filterOptions ]\n\nallProperties       =  star [ "/" typeName ]  ; all properties, optionally of a given type\n\nfilterOptions        = "{" OWS [ filterOperations OWS ] "}"\n\nfilterOperations     =  "none" ; not filterable\n                     / "eq" ; eq\n                     / "comp" ; eq, gt, ge, lt, le\n                     / "stringComp" ; eq, gt, ge, lt, le, startswith, endswith, contains\n                     / "string" ; eq, startswith, endswith, contains\n\norderByCapability = "orderby" [ OWS orderByProperties ]\n\norderByProperties = "{" OWS [ orderByProperty *( "," OWS orderByProperty OWS ) ] "}"\n\norderByProperty = allProperties / propertyName [ OWS orderByDirection ]\n\norderByDirection ="{" [ OWS ascOrDesc [ "," OWS ascOrDesc OWS ] ] "}"\n\nascOrDesc = "asc" / "desc"\n\nnoOptions = OWS "{" OWS "}"\n\n')),(0,a.kt)("h3",{id:"core-syntax-elements"},"Core Syntax Elements"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ABNF"},'\nqualifiedName       = identifier *( "." identifier )\n\nidentifier          = identInitial *identSubsequent\n\nidentInitial        = ALPHA / "_" ; Note: actually all Unicode letters\n\nidentSubsequent     = identInitial / DIGIT\n\nseparator           = OWS "," OWS / RWS\n\nstar                = "*"\n\nnumber              = integer [ "." 1*DIGIT ] [ "e" integer ]\n\ninteger             = [ "+" / "-" ] ( %x30 / %x31-39 *DIGIT )\n\nprecision           = integer\n\nscale               = integer\n\nmaxLength           = integer\n\nDOC-COMMENT         = "##" *( %x0-9 / %xB-C / %xE-10FFFF)\n\nALPHA               = %x41-5A / %x61-7A\n\nDIGIT               = %x30-39\n\nCHAR                = %x20-21 / %x23-5B / %x5D-10FFFF\n                    / ESCAPE ESCAPE\n                    / ESCAPE DQUOTE\n\nDQUOTE              = %x22              ; "\n\nESCAPE              = %x5C              ; \\\n\nOWS                 = *WS\nRWS                 = 1*WS\nWS                  = %x8 / %xA / %xD / %x20 ; TAB, LF, CR, SPACE\n')))}d.isMDXComponent=!0}}]);