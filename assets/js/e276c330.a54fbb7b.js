"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[594],{5318:(e,t,a)=>{a.d(t,{Zo:()=>m,kt:()=>c});var n=a(7378);function l(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function r(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?r(Object(a),!0).forEach((function(t){l(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):r(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,n,l=function(e,t){if(null==e)return{};var a,n,l={},r=Object.keys(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||(l[a]=e[a]);return l}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)a=r[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(l[a]=e[a])}return l}var s=n.createContext({}),i=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},m=function(e){var t=i(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,l=e.mdxType,r=e.originalType,s=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),d=i(a),c=l,y=d["".concat(s,".").concat(c)]||d[c]||u[c]||r;return a?n.createElement(y,o(o({ref:t},m),{},{components:a})):n.createElement(y,o({ref:t},m))}));function c(e,t){var a=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var r=a.length,o=new Array(r);o[0]=d;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:l,o[1]=p;for(var i=2;i<r;i++)o[i]=a[i];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},2490:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>g,contentTitle:()=>v,default:()=>x,frontMatter:()=>b,metadata:()=>T,toc:()=>h});var n=a(5773),l=a(7378),r=a(5318),o=a(8944),p=a(6457),s=a(784),i=a(9947),m=a(3457);const u="tabList_J5MA",d="tabItem_l0OV";function c(e){var t,a;const{lazy:r,block:p,defaultValue:c,values:y,groupId:k,className:N}=e,b=l.Children.map(e.children,(e=>{if((0,l.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),v=null!=y?y:b.map((e=>{let{props:{value:t,label:a,attributes:n}}=e;return{value:t,label:a,attributes:n}})),T=(0,s.l)(v,((e,t)=>e.value===t.value));if(T.length>0)throw new Error('Docusaurus error: Duplicate values "'+T.map((e=>e.value)).join(", ")+'" found in <Tabs>. Every value needs to be unique.');const g=null===c?c:null!=(t=null!=c?c:null==(a=b.find((e=>e.props.default)))?void 0:a.props.value)?t:b[0].props.value;if(null!==g&&!v.some((e=>e.value===g)))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+g+'" but none of its children has the corresponding value. Available values are: '+v.map((e=>e.value)).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");const{tabGroupChoices:h,setTabGroupChoices:f}=(0,i.U)(),[x,S]=(0,l.useState)(g),E=[],{blockElementScrollPositionUntilNextRender:C}=(0,m.o5)();if(null!=k){const e=h[k];null!=e&&e!==x&&v.some((t=>t.value===e))&&S(e)}const I=e=>{const t=e.currentTarget,a=E.indexOf(t),n=v[a].value;n!==x&&(C(t),S(n),null!=k&&f(k,String(n)))},j=e=>{var t;let a=null;switch(e.key){case"ArrowRight":{var n;const t=E.indexOf(e.currentTarget)+1;a=null!=(n=E[t])?n:E[0];break}case"ArrowLeft":{var l;const t=E.indexOf(e.currentTarget)-1;a=null!=(l=E[t])?l:E[E.length-1];break}}null==(t=a)||t.focus()};return l.createElement("div",{className:(0,o.Z)("tabs-container",u)},l.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":p},N)},v.map((e=>{let{value:t,label:a,attributes:r}=e;return l.createElement("li",(0,n.Z)({role:"tab",tabIndex:x===t?0:-1,"aria-selected":x===t,key:t,ref:e=>E.push(e),onKeyDown:j,onFocus:I,onClick:I},r,{className:(0,o.Z)("tabs__item",d,null==r?void 0:r.className,{"tabs__item--active":x===t})}),null!=a?a:t)}))),r?(0,l.cloneElement)(b.filter((e=>e.props.value===x))[0],{className:"margin-top--md"}):l.createElement("div",{className:"margin-top--md"},b.map(((e,t)=>(0,l.cloneElement)(e,{key:t,hidden:e.props.value!==x})))))}function y(e){const t=(0,p.Z)();return l.createElement(c,(0,n.Z)({key:String(t)},e))}const k="tabItem_wHwb";function N(e){let{children:t,hidden:a,className:n}=e;return l.createElement("div",{role:"tabpanel",className:(0,o.Z)(k,n),hidden:a},t)}const b={id:"rsdl-semantics",title:"RSDL Semantics"},v=void 0,T={unversionedId:"rsdl/rsdl-semantics",id:"rsdl/rsdl-semantics",title:"RSDL Semantics",description:"DRAFT",source:"@site/../docs/rsdl/rapid-rsdl-semantics.mdx",sourceDirName:"rsdl",slug:"/rsdl/rsdl-semantics",permalink:"/docs/rsdl/rsdl-semantics",draft:!1,editUrl:"https://github.com/oasis-open/odata-rapid/edit/main/docs/../docs/rsdl/rapid-rsdl-semantics.mdx",tags:[],version:"current",frontMatter:{id:"rsdl-semantics",title:"RSDL Semantics"},sidebar:"docs",previous:{title:"RSDL Intro",permalink:"/docs/rsdl/rsdl-intro"},next:{title:"RSDL ABNF",permalink:"/docs/rsdl/rsdl-abnf"}},g={},h=[{value:"Model",id:"model",level:2},{value:"Structured Types",id:"structured-types",level:2},{value:"Structured Types with <code>key</code> Properties",id:"structured-types-with-key-properties",level:3},{value:"Structured Types without <code>key</code> Properties",id:"structured-types-without-key-properties",level:3},{value:"Abstract Structured Types",id:"abstract-structured-types",level:3},{value:"Structured Type Inheritance",id:"structured-type-inheritance",level:3},{value:"Properties",id:"properties",level:3},{value:"Property Types",id:"property-types",level:4},{value:"Actions and Functions",id:"actions-and-functions",level:3},{value:"Function Return Types",id:"function-return-types",level:4},{value:"Functions Parameters",id:"functions-parameters",level:4},{value:"Enumeration Types",id:"enumeration-types",level:2},{value:"Flag Types",id:"flag-types",level:2},{value:"Service",id:"service",level:2},{value:"Multi-Valued Service Member",id:"multi-valued-service-member",level:3},{value:"Single-Valued Service Member",id:"single-valued-service-member",level:3},{value:"Descriptions and Comments",id:"descriptions-and-comments",level:2},{value:"Appendix",id:"appendix",level:2},{value:"References",id:"references",level:3}],f={toc:h};function x(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},f,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"DRAFT\nInitial Draft. July 2020")),(0,r.kt)("p",null,"The semantic of RSDL (RAPID Schema Definition Language) can be described by mapping\nsyntactical constructs described in ",(0,r.kt)("a",{parentName:"p",href:"rsdl-abnf"},"rapid-rsdl-abnf")," to equivalent runtime ",(0,r.kt)("a",{parentName:"p",href:"/docs/spec/servicedescription"},"Service Definition")," constructs."),(0,r.kt)("p",null,"Please refer to ",(0,r.kt)("a",{parentName:"p",href:"./rsdl-abnf"},"rapid-rsdl-abnf")," for the syntactical constructs of RSDL."),(0,r.kt)("h2",{id:"model"},"Model"),(0,r.kt)("p",null,"A ",(0,r.kt)("a",{parentName:"p",href:"rsdl-abnf#model"},"model"),' is mapped to a CSDL Schema named "Model", that has an entity container named "Service".'),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "$Version": "4.01",\n  "$EntityContainer": "Model.Service",\n  "Model": {\n    "Service": { "$Kind": "EntityContainer" }\n  }\n}\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<Schema Namespace="Model" xmlns="http://docs.oasis-open.org/odata/ns/edm">\n  <EntityContainer Name="Service">\n  </EntityContainer>\n</Schema>\n')))),(0,r.kt)("p",null,"The model's\n",(0,r.kt)("a",{parentName:"p",href:"rsdl-abnf#service"},"service"),",\n",(0,r.kt)("a",{parentName:"p",href:"rsdl-abnf#structured-type"},"structured types"),", and\n",(0,r.kt)("a",{parentName:"p",href:"rsdl-abnf#enumeration-type"},"enumeration types")," are mapped to the respective constructs below and added to the schema (or container respectively)"),(0,r.kt)("h2",{id:"structured-types"},"Structured Types"),(0,r.kt)("p",null,"A ",(0,r.kt)("a",{parentName:"p",href:"rsdl-abnf#structured-type"},"structured type")," is mapped to either\nan ",(0,r.kt)("a",{parentName:"p",href:"http://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_EntityType"},"entity type"),"\nor a ",(0,r.kt)("a",{parentName:"p",href:"http://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_ComplexType"},"complex type"),"\nwhen converting from RSDL to CSDL."),(0,r.kt)("p",null,"A structured type with one or more properties marked with ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," is mapped to an entity type.\nCorrespondingly, a structured type without ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," properties is mapped to a complex type."),(0,r.kt)("h3",{id:"structured-types-with-key-properties"},"Structured Types with ",(0,r.kt)("inlineCode",{parentName:"h3"},"key")," Properties"),(0,r.kt)("p",null,"Here, we can see an example of how an RSDL structured type with a ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," id property maps to a CSDL entity type."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rsdl"},"type Employee {\n  key id: Integer\n  name : Name\n}\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"Employee": {\n  "$Kind": "EntityType",\n  "$Key": [ "id" ],\n  "id": { "$Type": "Edm.Int32" },\n  "name": { "$Type": "Model.Name" }\n}\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<EntityType Name="Employee">\n  <Key>\n    <PropertyRef Name="id" />\n  </Key>\n  <Property Name="id" Type="Edm.Int32" Nullable="false" />\n  <Property Name="name" Type="Model.Name" Nullable="false" />\n</EntityType>\n')))),(0,r.kt)("h3",{id:"structured-types-without-key-properties"},"Structured Types without ",(0,r.kt)("inlineCode",{parentName:"h3"},"key")," Properties"),(0,r.kt)("p",null,"On the other hand, an RSDL structured type without a ",(0,r.kt)("inlineCode",{parentName:"p"},"key")," property maps to a CSDL complex type.\nSuch types don't have keys because they are intended for organizing related properties into a group that is non-unique and does not stand on its own."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rsdl"},"type Name {\n  firstName : String\n  lastName: String\n}\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"Name": {\n  "$Kind": "ComplexType",\n  "firstName": { "$Type": "Edm.String" },\n  "lastName": { "$Type": "Edm.String" }\n}\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<ComplexType Name="Name">\n  <Property Name="firstName" Type="Edm.String" Nullable="false" />\n  <Property Name="lastName" Type="Edm.String" Nullable="false" />\n</ComplexType>\n')))),(0,r.kt)("h3",{id:"abstract-structured-types"},"Abstract Structured Types"),(0,r.kt)("p",null,"A type may be defined as ",(0,r.kt)("inlineCode",{parentName:"p"},"abstract"),". An abstract type cannot be instantiated, but can be used as a base type for other type definitions."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rsdl"},"abstract type Robot {\n  model: String\n}\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"Robot": {\n  "$Kind": "ComplexType",\n  "$Abstract": true,\n  "model": { "$Type": "Edm.String" }\n}\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<ComplexType Name="Robot" Abstract="true">\n  <Property Name="model" Type="Edm.String" Nullable="false" />\n</ComplexType>\n')))),(0,r.kt)("h3",{id:"structured-type-inheritance"},"Structured Type Inheritance"),(0,r.kt)("p",null,"Types may extend other types through inheritance.\nThe type derived from the base type inherits all properties, relationships, and operations bound to the base type (type inheritance) and can be used anywhere the base type is used (polymorphism)."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"type Android extends Robot {\n  name: String\n}\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"Android": {\n  "$Kind": "ComplexType",\n  "$BaseType": "Model.Robot",\n  "name": { "$Type": "Edm.String" }\n}\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<ComplexType Name="Android" BaseType="Model.Robot">\n  <Property Name="name" Type="Edm.String" Nullable="false" />\n</ComplexType>\n')))),(0,r.kt)("h3",{id:"properties"},"Properties"),(0,r.kt)("p",null,"The properties of a structured type are mapped to either a Property or a NavigationProperty depending on the property's type."),(0,r.kt)("p",null,"In the following example, let's assume ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," is mapped to a complex type and ",(0,r.kt)("inlineCode",{parentName:"p"},"employee")," is mapped to an entity type."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rsdl"},"type Company {\n  key stockSymbol: String\n  name: Name\n  employees: [Employee]\n}\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"Company": {\n  "$Kind": "EntityType",\n  "$Key": [ "stockSymbol" ],\n  "stockSymbol": { "$Type": "Edm.String" },\n  "name": { "$Type": "Edm.String" },\n  "employees": {\n    "$Kind": "NavigationProperty",\n    "$Type": "Model.Employee",\n    "$Collection": true,\n    "$ContainsTarget": true\n  }\n}\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<EntityType Name="Company">\n  <Key>\n    <PropertyRef Name="stockSymbol" />\n  </Key>\n  <Property Name="stockSymbol" Type="Edm.String" Nullable="false" />\n  <Property Name="name" Type="Edm.String" Nullable="false" />\n  <NavigationProperty Name="employees" Type="Collection(Model.Employee)" ContainsTarget="true" />\n</EntityType>\n')))),(0,r.kt)("h4",{id:"property-types"},"Property Types"),(0,r.kt)("p",null,"The type of a property is one of:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"the built-in types defined in the ",(0,r.kt)("a",{parentName:"li",href:"rsdl-abnf/#structured-type"},(0,r.kt)("inlineCode",{parentName:"a"},"builtInType"))," syntax rule"),(0,r.kt)("li",{parentName:"ul"},"the primitive EDM types listed in ",(0,r.kt)("a",{parentName:"li",href:"http://docs.oasis-open.org/odata/odata-csdl-json/v4.01/odata-csdl-json-v4.01.html#sec_PrimitiveTypes"},"OData CSDL JSON Representation")," and ",(0,r.kt)("a",{parentName:"li",href:"http://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_PrimitiveTypes"},"OData CSDL XML Representation")),(0,r.kt)("li",{parentName:"ul"},"the structured or enumeration types defined in the model")),(0,r.kt)("p",null,"Each of these named types can be marked as"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"optional via a question mark ",(0,r.kt)("inlineCode",{parentName:"li"},"?")),(0,r.kt)("li",{parentName:"ul"},"multi-valued via enclosing it in brackets ",(0,r.kt)("inlineCode",{parentName:"li"},"[")," ",(0,r.kt)("inlineCode",{parentName:"li"},"]"))),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rsdl"},"type Foo {\n  test1: Integer\n  test2: Integer?\n  test3: [Integer]\n  test4: [Integer?]\n  test5: String\n  test6: String(80)\n  test7: Decimal\n  test8: Decimal(15,2)\n}\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"Foo": {\n  "$Kind": "EntityType",\n  "test1": {  "$Type": "Edm.Int32" },\n  "test2": { "$Nullable": true, "$Type": "Edm.Int32" },\n  "test3": { "$Collection": true, "$Type": "Edm.Int32" },\n  "test4": { "$Collection": true, "$Nullable": true, "$Type": "Edm.Int32" },\n  "test5": {},\n  "test6": {  "$MaxLength": 80 },\n  "test7": {  "$Type": "Edm.Decimal", "$Scale": "variable" },\n  "test8": {  "$Type": "Edm.Decimal", "$Precision": 15, "$Scale": 2 },\n}\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<EntityType Name="Foo">\n  <Property Name="test1" Type="Edm.Int32" Nullable="false" />\n  <Property Name="test2" Type="Edm.Int32" Nullable="true" />\n  <Property Name="test3" Type="Collection(Edm.Int32)" Nullable="false"/>\n  <Property Name="test4" Type="Collection(Edm.Int32)" Nullable="true"/>\n  <Property Name="test5" Type="Edm.String" Nullable="false" />\n  <Property Name="test6" Type="Edm.String" Nullable="false" MaxLength="80" />\n  <Property Name="test7" Type="Edm.Decimal" Nullable="false" Scale="variable" />\n  <Property Name="test8" Type="Edm.Decimal" Nullable="false" Precision="15" Scale="2" />\n</EntityType>\n')))),(0,r.kt)("h3",{id:"actions-and-functions"},"Actions and Functions"),(0,r.kt)("p",null,"The syntactical production rule ",(0,r.kt)("inlineCode",{parentName:"p"},"operation")," is mapped to a bound action or a bound function in CSDL."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"operations with an ",(0,r.kt)("inlineCode",{parentName:"li"},"action")," modifier are mapped to a CSDL ",(0,r.kt)("a",{parentName:"li",href:"http://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_Action"},"Action")),(0,r.kt)("li",{parentName:"ul"},"operations without a modifier are mapped to CSDL ",(0,r.kt)("a",{parentName:"li",href:"http://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html#sec_Function"},"Function"))),(0,r.kt)("p",null,"The binding parameter of the function is inferred from the containing type production rule and named ",(0,r.kt)("inlineCode",{parentName:"p"},"it")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rsdl"},"type Employee {\n  key id: Integer\n  foo()\n}\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"foo": [\n  {\n    "$Kind": "Function",\n    "$IsBound": true,\n    "$IsComposable": true,\n    "$Parameter": [ { "$Name": "it", "$Type": "Model.Employee" } ]\n  }\n]\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<Function Name="foo" IsBound="true" IsComposable="true">\n  <Parameter Name="it" Type="Model.Employee" Nullable="false" />\n</Function>\n')))),(0,r.kt)("h4",{id:"function-return-types"},"Function Return Types"),(0,r.kt)("p",null,"The return type of a function is mapped similar to a property type with the same semantic for ",(0,r.kt)("inlineCode",{parentName:"p"},"[")," ",(0,r.kt)("inlineCode",{parentName:"p"},"]")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"?"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rsdl"},"type Employee {\n  key id: Integer\n  foo() : Integer\n  bar() : [Integer]\n}\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"foo": [\n  {\n    "$Kind": "Function",\n    "$IsBound": true,\n    "$IsComposable": true,\n    "$Parameter": [ { "$Name": "it", "$Type": "Model.Employee" } ],\n    "$ReturnType": { "$Type": "Edm.Int32" }\n  }\n],\n"bar": [\n  {\n    "$Kind": "Function",\n    "$IsBound": true,\n    "$IsComposable": true,\n    "$Parameter": [ { "$Name": "it", "$Type": "Model.Employee" } ],\n    "$ReturnType": { "$Collection": true, "$Type": "Edm.Int32" }\n  }\n]\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<Function Name="foo" IsBound="true" IsComposable="true">\n  <Parameter Name="it" Type="Model.Employee" Nullable="false" />\n  <ReturnType Type="Edm.Int32" Nullable="false" />\n</Function>\n\n<Function Name="bar" IsBound="true" IsComposable="true">\n  <Parameter Name="it" Type="Model.Employee" Nullable="false" />\n  <ReturnType Type="Collection(Edm.Int32)" Nullable="false" />\n</Function>\n')))),(0,r.kt)("h4",{id:"functions-parameters"},"Functions Parameters"),(0,r.kt)("p",null,"Parameters are similar to properties in that they have a name and reference a type."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rsdl"},"type Employee {\n  key id: Integer\n  foo(a: Integer, b: [Integer?])\n}\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  "foo": [\n    {\n      "$Kind": "Function",\n      "$IsBound": true,\n      "$IsComposable": true,\n      "$Parameter": [\n        { "$Name": "it", "$Type": "Model.Employee" },\n        { "$Name": "a", "$Type": "Edm.Int32" },\n        { "$Name": "b", "$Collection": true, "$Type": "Edm.Int32", "$Nullable": true }\n      ]\n    }\n  ]\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<Function Name="foo" IsBound="true" IsComposable="true">\n  <Parameter Name="it" Type="Model.Employee" Nullable="false" />\n  <Parameter Type="Edm.Int32" Nullable="false" />\n  <Parameter Type="Collection(Edm.Int32)" Nullable="true" />\n</Function>\n')))),(0,r.kt)("blockquote",null,(0,r.kt)("p",{parentName:"blockquote"},"TODO: decide on optional parameters, how they are different from nullable required parameters, and if that is a feature required now or too much for RAPID")),(0,r.kt)("h2",{id:"enumeration-types"},"Enumeration Types"),(0,r.kt)("p",null,"An ",(0,r.kt)("a",{parentName:"p",href:"rsdl-abnf#enumeration-type"},"Enumeration Type")," is mapped to a CSDL EnumType. The enumeration members' values are automatically assigned."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"enum employmentType { salaried hourly }\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"employmentType": {\n  "$Kind": "EnumType",\n  "salaried": 0,\n  "hourly": 1\n}\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<EnumType Name="employmentType">\n  <Member Name="salaried" Value="0" />\n  <Member Name="hourly" Value="1" />\n</EnumType>\n')))),(0,r.kt)("h2",{id:"flag-types"},"Flag Types"),(0,r.kt)("p",null,"A ",(0,r.kt)("a",{parentName:"p",href:"rsdl-abnf#enumeration-type"},"Flags Type"),", i.e an enumeration that starts with the keyword flags, is mapped to an CSDL EnumType with the ",(0,r.kt)("inlineCode",{parentName:"p"},"IsFlags")," property set to ",(0,r.kt)("inlineCode",{parentName:"p"},"true"),".\nThe members' values are automatically assigned to powers of 2."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},"flags PhoneService { LandLine Cell Fax Internet Other }\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'  "PhoneService": {\n    "$Kind": "EnumType",\n    "$IsFlags": true,\n    "LandLine": 1,\n    "Cell": 2,\n    "Fax": 4,\n    "Internet": 8,\n    "Other": 16\n  }\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'  <EnumType Name="PhoneService" IsFlags="true">\n    <Member Name="LandLine" Value="1" />\n    <Member Name="Cell" Value="2" />\n    <Member Name="Fax" Value="4" />\n    <Member Name="Internet" Value="8" />\n    <Member Name="Other" Value="16" />\n  </EnumType>\n')))),(0,r.kt)("h2",{id:"service"},"Service"),(0,r.kt)("p",null,'As mentioned above, every RAPID service model creates a CSDL entity container named "Service"'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rsdl"},"service {\n}\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"Service": {\n  "$Kind": "EntityContainer"\n}\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<EntityContainer Name="Service">\n')))),(0,r.kt)("h3",{id:"multi-valued-service-member"},"Multi-Valued Service Member"),(0,r.kt)("p",null,"A service member of a multi-valued type is mapped to a CSDL entity set."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rsdl"},"service {\n  employees: [Employee]\n}\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"Service": {\n  "$Kind": "EntityContainer",\n  "employees": { "$Collection": true, "$Type": "Model.Employee" }\n}\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<EntityContainer Name="Service">\n  <EntitySet Name="employees" EntityType="Model.Employee" />\n</EntityContainer>\n')))),(0,r.kt)("p",null,"If the type is used as a type on a multi-value and as the type of a property of a structured type (i.e. a navigation property in CSDL),\nthe appropriate navigation property bindings get created.\nThe ",(0,r.kt)("inlineCode",{parentName:"p"},"Company")," type from the ",(0,r.kt)("a",{parentName:"p",href:"#properties"},"Properties section")," has an ",(0,r.kt)("inlineCode",{parentName:"p"},"employees")," property of the type ",(0,r.kt)("inlineCode",{parentName:"p"},"Employee"),".\nThe binding in CSDL defines that objects of these properties are bound to the ",(0,r.kt)("inlineCode",{parentName:"p"},"employees")," entity set."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rsdl"},"service {\n  competitors: [Company]\n}\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"Service": {\n  "$Kind": "EntityContainer",\n  "competitors": {\n    "$Collection": true,\n    "$Type": "Model.Company",\n    "$NavigationPropertyBinding": {\n      "employees": "employees"\n    }\n  }\n}\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<EntityContainer Name="Service">\n  <EntitySet Name="competitors" EntityType="Model.Company">\n    <NavigationPropertyBinding Path="employees" Target="employees" />\n  </EntitySet>\n</EntityContainer>\n')))),(0,r.kt)("h3",{id:"single-valued-service-member"},"Single-Valued Service Member"),(0,r.kt)("p",null,"A service member of a single-value type gets mapped to a CSDL singleton."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rsdl"},"service {\n  company: Company\n}\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"Service": {\n  "$Kind": "EntityContainer",\n  "company": { "$Type": "Model.Company" }\n}\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<EntityContainer Name="Service">\n  <Singleton Name="company" Type="Model.Company" />\n</EntityContainer>\n')))),(0,r.kt)("h2",{id:"descriptions-and-comments"},"Descriptions and Comments"),(0,r.kt)("p",null,"All elements of a model can be described by lines starting with ",(0,r.kt)("inlineCode",{parentName:"p"},"##")," preceding the model element.\nThese descriptions are mapped to annotations with term ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/oasis-tcs/odata-vocabularies/blob/main/vocabularies/Org.OData.Core.V1.md#Description"},"Core.Description")," in the corresponding CSDL construct."),(0,r.kt)("p",null,"In addition anything after a single ",(0,r.kt)("inlineCode",{parentName:"p"},"#")," character will be treated as a comment and ignored when mapping to CSDL."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-rsdl"},"## The Employees Service\n# still needs some work\nservice {\n  ## List of all employees\n  employees: [Employee]\n}\n")),(0,r.kt)(y,{defaultValue:"json",groupId:"csdl",values:[{label:"JSON",value:"json"},{label:"XML",value:"xml"}],mdxType:"Tabs"},(0,r.kt)(N,{value:"json",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'"Service": {\n  "$Kind": "EntityContainer",\n  "@Core.Description": "The Employees Service",\n  "employees": { "$Collection": true, "$Type": "Model.Employee", "@Core.Description": "List of all employees" }\n}\n'))),(0,r.kt)(N,{value:"xml",mdxType:"TabItem"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-xml"},'<EntityContainer Name="Service">\n  <Annotation Term="Core.Description" String="The Employees Service" />\n  <EntitySet Name="employees" EntityType="Model.Employee">\n    <Annotation Term="Core.Description" String="List of all employees" />\n  </EntitySet>\n</EntityContainer>\n')))),(0,r.kt)("h2",{id:"appendix"},"Appendix"),(0,r.kt)("h3",{id:"references"},"References"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"https://en.wikipedia.org/wiki/Semantics_(computer_science)"},"Semantics")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://docs.oasis-open.org/odata/odata-csdl-json/v4.01/odata-csdl-json-v4.01.html"},"OData CSDL JSON Representation")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"http://docs.oasis-open.org/odata/odata-csdl-xml/v4.01/odata-csdl-xml-v4.01.html"},"OData CSDL XML Representation"))))}x.isMDXComponent=!0}}]);